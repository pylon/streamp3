name: Build and upload to PyPI

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      - name: Install Visual C++ for Python 3
        if: runner.os == 'Windows'
        run: choco install python3 -f -y

      - name: Install openblas for macos
        if: runner.os == 'macOS'
        run: brew install openblas

      - name: Install lame for Windows
        if: runner.os == 'Windows'
        run: choco install lame

      - name: Install lame for macos
        if: runner.os == 'macOS'
        run: brew install lame

      - name: Install lame for Linux
        if: runner.os == 'Linux'
        run: sudo apt-get install libmp3lame-dev

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_ENVIRONMENT_MACOS: OPENBLAS="$(brew --prefix openblas)"
          CIBW_SKIP: cp27-*

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # publish when a GitHub Release is created
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
